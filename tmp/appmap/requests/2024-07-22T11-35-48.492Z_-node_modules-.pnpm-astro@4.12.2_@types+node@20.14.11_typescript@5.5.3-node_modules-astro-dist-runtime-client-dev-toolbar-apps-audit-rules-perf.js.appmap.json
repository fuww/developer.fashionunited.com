{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.pnpm/astro@4.12.2_@types+node@20.14.11_typescript@5.5.3/node_modules/astro/dist/runtime/client/dev-toolbar/apps/audit/rules/perf.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:4321",
          "Connection": "keep-alive",
          "Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
          "Origin": "http://localhost:4321",
          "Dnt": "1",
          "Sec-Ch-Ua-Mobile": "?0",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
          "Sec-Ch-Ua-Platform": "\"macOS\"",
          "Accept": "*/*",
          "Sec-Fetch-Site": "same-origin",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Dest": "script",
          "Referer": "http://localhost:4321/node_modules/.pnpm/astro@4.12.2_@types+node@20.14.11_typescript@5.5.3/node_modules/astro/dist/runtime/client/dev-toolbar/apps/audit/rules/index.js?v=6fff9a3d",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Accept-Language": "nl,en;q=0.9,en-US;q=0.8,en-GB;q=0.7",
          "Sec-Gpc": "1"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'6fff9a3d'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"fab-Ke/KwpKqU8UsgIZjdSE4sF8ziEQ\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "const EXTERNAL_URL_REGEX = /^(?:[a-z+]+:)?\\/\\//i;\nconst perf = [\n  {\n    code: \"perf-use-image-component\",\n    title: \"Use the Image component\",\n    message: \"This image could be replaced with the Image component to improve performance.\",\n    selector: \"img:not([data-image-component])\",\n    async match(element) {\n      const src = element.getAttribute(\"src\");\n      if (!src) return false;\n      if (src.startsWith(\"data:\")) return false;\n      if (!EXTERNAL_URL_REGEX.test(src)) {\n        const imageData = await fetch(src).then((response) => response.blob());\n        if (imageData.size < 20480) return false;\n      }\n      return true;\n    }\n  },\n  {\n    code: \"perf-use-loading-lazy\",\n    title: \"Unoptimized loading attribute\",\n    message: (element) => `This ${element.nodeName} tag is below the fold and could be lazy-loaded to improve performance.`,\n    selector: 'img:not([loading]), img[loading=\"eager\"], iframe:not([loading]), iframe[loading=\"eager\"]',\n    match(element) {\n      const htmlElement = element;\n      if (htmlElement.offsetTop < window.innerHeight) return false;\n      if (htmlElement.src.startsWith(\"data:\")) return false;\n      return true;\n    }\n  },\n  {\n    code: \"perf-use-loading-eager\",\n    title: \"Unoptimized loading attribute\",\n    message: (element) => `This ${element.nodeName} tag is above the fold and could be eagerly-loaded to improve performance.`,\n    selector: 'img[loading=\"lazy\"], iframe[loading=\"lazy\"]',\n    match(element) {\n      const htmlElement = element;\n      if (htmlElement.offsetTop > window.innerHeight) return false;\n      if (htmlElement.src.startsWith(\"data:\")) return false;\n      return true;\n    }\n  },\n  {\n    code: \"perf-use-videos\",\n    title: \"Use videos instead of GIFs for large animations\",\n    message: \"This GIF could be replaced with a video to reduce its file size and improve performance.\",\n    selector: 'img[src$=\".gif\"]',\n    async match(element) {\n      const src = element.getAttribute(\"src\");\n      if (!src) return false;\n      if (EXTERNAL_URL_REGEX.test(src)) return false;\n      if (!EXTERNAL_URL_REGEX.test(src)) {\n        const imageData = await fetch(src).then((response) => response.blob());\n        if (imageData.size < 102400) return false;\n      }\n      return true;\n    }\n  },\n  {\n    code: \"perf-slow-component-server-render\",\n    title: \"Server-rendered component took a long time to render\",\n    message: (element) => `This component took an unusually long time to render on the server (${getCleanRenderingTime(\n      element.getAttribute(\"server-render-time\")\n    )}). This might be a sign that it's doing too much work on the server, or something is blocking rendering.`,\n    selector: \"astro-island[server-render-time]\",\n    match(element) {\n      const serverRenderTime = element.getAttribute(\"server-render-time\");\n      if (!serverRenderTime) return false;\n      const renderingTime = parseFloat(serverRenderTime);\n      if (Number.isNaN(renderingTime)) return false;\n      return renderingTime > 500;\n    }\n  },\n  {\n    code: \"perf-slow-component-client-hydration\",\n    title: \"Client-rendered component took a long time to hydrate\",\n    message: (element) => `This component took an unusually long time to render on the server (${getCleanRenderingTime(\n      element.getAttribute(\"client-render-time\")\n    )}). This could be a sign that something is blocking the main thread and preventing the component from hydrating quickly.`,\n    selector: \"astro-island[client-render-time]\",\n    match(element) {\n      const clientRenderTime = element.getAttribute(\"client-render-time\");\n      if (!clientRenderTime) return false;\n      const renderingTime = parseFloat(clientRenderTime);\n      if (Number.isNaN(renderingTime)) return false;\n      return renderingTime > 500;\n    }\n  }\n];\nfunction getCleanRenderingTime(time) {\n  if (!time) return \"unknown\";\n  const renderingTime = parseFloat(time);\n  if (Number.isNaN(renderingTime)) return \"unknown\";\n  return renderingTime.toFixed(2) + \"s\";\n}\nexport {\n  perf\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmYuanM/dj02ZmZmOWEzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFWFRFUk5BTF9VUkxfUkVHRVggPSAvXig/OlthLXorXSs6KT9cXC9cXC8vaTtcbmNvbnN0IHBlcmYgPSBbXG4gIHtcbiAgICBjb2RlOiBcInBlcmYtdXNlLWltYWdlLWNvbXBvbmVudFwiLFxuICAgIHRpdGxlOiBcIlVzZSB0aGUgSW1hZ2UgY29tcG9uZW50XCIsXG4gICAgbWVzc2FnZTogXCJUaGlzIGltYWdlIGNvdWxkIGJlIHJlcGxhY2VkIHdpdGggdGhlIEltYWdlIGNvbXBvbmVudCB0byBpbXByb3ZlIHBlcmZvcm1hbmNlLlwiLFxuICAgIHNlbGVjdG9yOiBcImltZzpub3QoW2RhdGEtaW1hZ2UtY29tcG9uZW50XSlcIixcbiAgICBhc3luYyBtYXRjaChlbGVtZW50KSB7XG4gICAgICBjb25zdCBzcmMgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcInNyY1wiKTtcbiAgICAgIGlmICghc3JjKSByZXR1cm4gZmFsc2U7XG4gICAgICBpZiAoc3JjLnN0YXJ0c1dpdGgoXCJkYXRhOlwiKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKCFFWFRFUk5BTF9VUkxfUkVHRVgudGVzdChzcmMpKSB7XG4gICAgICAgIGNvbnN0IGltYWdlRGF0YSA9IGF3YWl0IGZldGNoKHNyYykudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmJsb2IoKSk7XG4gICAgICAgIGlmIChpbWFnZURhdGEuc2l6ZSA8IDIwNDgwKSByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBjb2RlOiBcInBlcmYtdXNlLWxvYWRpbmctbGF6eVwiLFxuICAgIHRpdGxlOiBcIlVub3B0aW1pemVkIGxvYWRpbmcgYXR0cmlidXRlXCIsXG4gICAgbWVzc2FnZTogKGVsZW1lbnQpID0+IGBUaGlzICR7ZWxlbWVudC5ub2RlTmFtZX0gdGFnIGlzIGJlbG93IHRoZSBmb2xkIGFuZCBjb3VsZCBiZSBsYXp5LWxvYWRlZCB0byBpbXByb3ZlIHBlcmZvcm1hbmNlLmAsXG4gICAgc2VsZWN0b3I6ICdpbWc6bm90KFtsb2FkaW5nXSksIGltZ1tsb2FkaW5nPVwiZWFnZXJcIl0sIGlmcmFtZTpub3QoW2xvYWRpbmddKSwgaWZyYW1lW2xvYWRpbmc9XCJlYWdlclwiXScsXG4gICAgbWF0Y2goZWxlbWVudCkge1xuICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgaWYgKGh0bWxFbGVtZW50Lm9mZnNldFRvcCA8IHdpbmRvdy5pbm5lckhlaWdodCkgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKGh0bWxFbGVtZW50LnNyYy5zdGFydHNXaXRoKFwiZGF0YTpcIikpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSxcbiAge1xuICAgIGNvZGU6IFwicGVyZi11c2UtbG9hZGluZy1lYWdlclwiLFxuICAgIHRpdGxlOiBcIlVub3B0aW1pemVkIGxvYWRpbmcgYXR0cmlidXRlXCIsXG4gICAgbWVzc2FnZTogKGVsZW1lbnQpID0+IGBUaGlzICR7ZWxlbWVudC5ub2RlTmFtZX0gdGFnIGlzIGFib3ZlIHRoZSBmb2xkIGFuZCBjb3VsZCBiZSBlYWdlcmx5LWxvYWRlZCB0byBpbXByb3ZlIHBlcmZvcm1hbmNlLmAsXG4gICAgc2VsZWN0b3I6ICdpbWdbbG9hZGluZz1cImxhenlcIl0sIGlmcmFtZVtsb2FkaW5nPVwibGF6eVwiXScsXG4gICAgbWF0Y2goZWxlbWVudCkge1xuICAgICAgY29uc3QgaHRtbEVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgaWYgKGh0bWxFbGVtZW50Lm9mZnNldFRvcCA+IHdpbmRvdy5pbm5lckhlaWdodCkgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKGh0bWxFbGVtZW50LnNyYy5zdGFydHNXaXRoKFwiZGF0YTpcIikpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSxcbiAge1xuICAgIGNvZGU6IFwicGVyZi11c2UtdmlkZW9zXCIsXG4gICAgdGl0bGU6IFwiVXNlIHZpZGVvcyBpbnN0ZWFkIG9mIEdJRnMgZm9yIGxhcmdlIGFuaW1hdGlvbnNcIixcbiAgICBtZXNzYWdlOiBcIlRoaXMgR0lGIGNvdWxkIGJlIHJlcGxhY2VkIHdpdGggYSB2aWRlbyB0byByZWR1Y2UgaXRzIGZpbGUgc2l6ZSBhbmQgaW1wcm92ZSBwZXJmb3JtYW5jZS5cIixcbiAgICBzZWxlY3RvcjogJ2ltZ1tzcmMkPVwiLmdpZlwiXScsXG4gICAgYXN5bmMgbWF0Y2goZWxlbWVudCkge1xuICAgICAgY29uc3Qgc3JjID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XG4gICAgICBpZiAoIXNyYykgcmV0dXJuIGZhbHNlO1xuICAgICAgaWYgKEVYVEVSTkFMX1VSTF9SRUdFWC50ZXN0KHNyYykpIHJldHVybiBmYWxzZTtcbiAgICAgIGlmICghRVhURVJOQUxfVVJMX1JFR0VYLnRlc3Qoc3JjKSkge1xuICAgICAgICBjb25zdCBpbWFnZURhdGEgPSBhd2FpdCBmZXRjaChzcmMpLnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5ibG9iKCkpO1xuICAgICAgICBpZiAoaW1hZ2VEYXRhLnNpemUgPCAxMDI0MDApIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSxcbiAge1xuICAgIGNvZGU6IFwicGVyZi1zbG93LWNvbXBvbmVudC1zZXJ2ZXItcmVuZGVyXCIsXG4gICAgdGl0bGU6IFwiU2VydmVyLXJlbmRlcmVkIGNvbXBvbmVudCB0b29rIGEgbG9uZyB0aW1lIHRvIHJlbmRlclwiLFxuICAgIG1lc3NhZ2U6IChlbGVtZW50KSA9PiBgVGhpcyBjb21wb25lbnQgdG9vayBhbiB1bnVzdWFsbHkgbG9uZyB0aW1lIHRvIHJlbmRlciBvbiB0aGUgc2VydmVyICgke2dldENsZWFuUmVuZGVyaW5nVGltZShcbiAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwic2VydmVyLXJlbmRlci10aW1lXCIpXG4gICAgKX0pLiBUaGlzIG1pZ2h0IGJlIGEgc2lnbiB0aGF0IGl0J3MgZG9pbmcgdG9vIG11Y2ggd29yayBvbiB0aGUgc2VydmVyLCBvciBzb21ldGhpbmcgaXMgYmxvY2tpbmcgcmVuZGVyaW5nLmAsXG4gICAgc2VsZWN0b3I6IFwiYXN0cm8taXNsYW5kW3NlcnZlci1yZW5kZXItdGltZV1cIixcbiAgICBtYXRjaChlbGVtZW50KSB7XG4gICAgICBjb25zdCBzZXJ2ZXJSZW5kZXJUaW1lID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJzZXJ2ZXItcmVuZGVyLXRpbWVcIik7XG4gICAgICBpZiAoIXNlcnZlclJlbmRlclRpbWUpIHJldHVybiBmYWxzZTtcbiAgICAgIGNvbnN0IHJlbmRlcmluZ1RpbWUgPSBwYXJzZUZsb2F0KHNlcnZlclJlbmRlclRpbWUpO1xuICAgICAgaWYgKE51bWJlci5pc05hTihyZW5kZXJpbmdUaW1lKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHJlbmRlcmluZ1RpbWUgPiA1MDA7XG4gICAgfVxuICB9LFxuICB7XG4gICAgY29kZTogXCJwZXJmLXNsb3ctY29tcG9uZW50LWNsaWVudC1oeWRyYXRpb25cIixcbiAgICB0aXRsZTogXCJDbGllbnQtcmVuZGVyZWQgY29tcG9uZW50IHRvb2sgYSBsb25nIHRpbWUgdG8gaHlkcmF0ZVwiLFxuICAgIG1lc3NhZ2U6IChlbGVtZW50KSA9PiBgVGhpcyBjb21wb25lbnQgdG9vayBhbiB1bnVzdWFsbHkgbG9uZyB0aW1lIHRvIHJlbmRlciBvbiB0aGUgc2VydmVyICgke2dldENsZWFuUmVuZGVyaW5nVGltZShcbiAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiY2xpZW50LXJlbmRlci10aW1lXCIpXG4gICAgKX0pLiBUaGlzIGNvdWxkIGJlIGEgc2lnbiB0aGF0IHNvbWV0aGluZyBpcyBibG9ja2luZyB0aGUgbWFpbiB0aHJlYWQgYW5kIHByZXZlbnRpbmcgdGhlIGNvbXBvbmVudCBmcm9tIGh5ZHJhdGluZyBxdWlja2x5LmAsXG4gICAgc2VsZWN0b3I6IFwiYXN0cm8taXNsYW5kW2NsaWVudC1yZW5kZXItdGltZV1cIixcbiAgICBtYXRjaChlbGVtZW50KSB7XG4gICAgICBjb25zdCBjbGllbnRSZW5kZXJUaW1lID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJjbGllbnQtcmVuZGVyLXRpbWVcIik7XG4gICAgICBpZiAoIWNsaWVudFJlbmRlclRpbWUpIHJldHVybiBmYWxzZTtcbiAgICAgIGNvbnN0IHJlbmRlcmluZ1RpbWUgPSBwYXJzZUZsb2F0KGNsaWVudFJlbmRlclRpbWUpO1xuICAgICAgaWYgKE51bWJlci5pc05hTihyZW5kZXJpbmdUaW1lKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIHJlbmRlcmluZ1RpbWUgPiA1MDA7XG4gICAgfVxuICB9XG5dO1xuZnVuY3Rpb24gZ2V0Q2xlYW5SZW5kZXJpbmdUaW1lKHRpbWUpIHtcbiAgaWYgKCF0aW1lKSByZXR1cm4gXCJ1bmtub3duXCI7XG4gIGNvbnN0IHJlbmRlcmluZ1RpbWUgPSBwYXJzZUZsb2F0KHRpbWUpO1xuICBpZiAoTnVtYmVyLmlzTmFOKHJlbmRlcmluZ1RpbWUpKSByZXR1cm4gXCJ1bmtub3duXCI7XG4gIHJldHVybiByZW5kZXJpbmdUaW1lLnRvRml4ZWQoMikgKyBcInNcIjtcbn1cbmV4cG9ydCB7XG4gIHBlcmZcbn07XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pELEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE... (11858 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0005861659997208335
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.0",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.11.1"
    },
    "app": "developer-fashionunited-com",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.pnpm/astro@4.12.2_@types+node@20.14.11_typescript@5.5.3/node_modules/astro/dist/runtime/client/dev-toolbar/apps/audit/rules/perf.js (200) — 2024-07-22T11:35:48.492Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.pnpm/astro@4.12.2_@types+node@20.14.11_typescript@5.5.3/node_modules/astro/dist/runtime/client/dev-toolbar/apps/audit/rules/perf.js"
        }
      ]
    }
  ]
}