const id = "docs/marketplace/graphql-api.md";
						const collection = "docs";
						const slug = "docs/marketplace/graphql-api";
						const body = "\n## About GraphQL\n\nThe [GraphQL](https://graphql.github.io/) data query language is:\n\n- **[A specification.](https://graphql.github.io/graphql-spec/June2018/)** The\n  spec determines the validity of the schema on the API server. The schema\n  determines the validity of client calls.\n\n- **Strongly typed.** The schema defines an API's type system and all object\n  relationships.\n\n- **Introspective.** A client can query the schema for details about the schema.\n\n- **Hierarchical.** The shape of a GraphQL call mirrors the shape of the JSON\n  data it returns. Nested fields let you query for and receive only the data you\n  specify in a **single round trip.**\n\n- **An application layer.** GraphQL is not a storage model or a database query\n  language. The graph refers to graph structures defined in the schema, where\n  nodes define objects and edges define relationships between objects. The API\n  traverses and returns application data based on the schema definitions,\n  independent of how the data is stored.\n\n## Endpoint\n\n[https://fashionunited.com/graphql/](https://fashionunited.com/graphql/)\n\n## The GraphiQL Playground\n\n[https://fashionunited.com/graphiql/](https://fashionunited.com/graphiql/)\n\n## My first query\n\nGraphQL is self-documenting, therefore you should be able to figure out possible\nqueries by having a look at the documentation found in the playground. The\n<span class=\"bg-green\">green tab</span> on the right opens up the schema.\n\nTo help you getting started, here's some example queries for the Marketplace.\n\n```graphql\n{\n  productsConnection(locales: [\"en-US\"], brandIds: [1827], first: 20 ){\n    edges {\n      node {\n        id\n        name\n        description\n        sizes\n        season\n        brand{\n          name\n        }\n        imageUrl       \n      }\n    }\n  }\n}\n```\n\n- This is shabbies: `brandIds: [1827]`\n- Don't request too much at once or you will get an error. We make use of\n  **Query Complexity** to limit your calls.\n- Without an **API key** you can only request public data.\n\n### Pagination\n\nPagination works by specifying limit and offset:\n\n```graphql\n{\n  products(locales: [\"en-US\"], brandIds: [1827], limit: 20, offset: 10) {\n    id\n    name\n    imageUrl\n    brand{\n      name\n    }\n    sizes\n    colors {\n      name\n    }\n  }\n}\n```\n\nHave fun exploring and let us know what you plan to build!\n";
						const data = {title:"GraphQL API",editUrl:true,head:[],template:"doc",sidebar:{hidden:false,attrs:{}},pagefind:true,draft:false};
						const _internal = {
							type: 'content',
							filePath: "/Users/joost/git/developer.fashionunited.com/src/content/docs/docs/marketplace/graphql-api.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
