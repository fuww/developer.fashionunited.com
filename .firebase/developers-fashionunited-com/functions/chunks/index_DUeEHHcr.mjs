import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_B8K-b4g3.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<h2 id=\"styleguide\">Styleguide</h2>\n<p>Examples of styling content <strong>without</strong> code samples in between.</p>\n<h3 id=\"typography\">Typography</h3>\n<p>Examples of typography</p>\n<h1 id=\"h1-heading\">h1 Heading</h1>\n<p>The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<h2 id=\"h2-heading\">h2 Heading</h2>\n<p>The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<h3 id=\"h3-heading\">h3 Heading</h3>\n<p>The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<h4 id=\"h4-heading\">h4 Heading</h4>\n<p>The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<h5 id=\"h5-heading\">h5 Heading</h5>\n<p>The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<h6 id=\"h6-heading\">h6 Heading</h6>\n<p>The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<p><span class=\"subtitle1\">Subtitle1</span></p>\n<p><span class=\"subtitle2\">Subtitle2</span></p>\n<p>Body1 The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.</p>\n<p class=\"body2\">Body2 The Fashionunited platform connects your website or application with the worldwide fashion conversation happening on Fashionunited.</p>\n<p><span class=\"overline\">Overline</span></p>\n<p><span class=\"btn\">Button</span></p>\n<p><span class=\"caption\">Caption</span></p>\n<h2 id=\"horizontal-rules\">Horizontal Rules</h2>\n<hr>\n<hr>\n<hr>\n<h2 id=\"for-typography-pros-smart-quotes-mdash--ndash\">For typography pro‚Äôs: Smart quotes, mdash &#x26; ndash</h2>\n<p>mdash: ‚Äî ndash: ‚Äì regular hyphen: -</p>\n<!--\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes' -->\n<h2 id=\"emphasis\">Emphasis</h2>\n<p><strong>This is bold text</strong></p>\n<p><strong>This is bold text</strong></p>\n<p><em>This is italic text</em></p>\n<p><em>This is italic text</em></p>\n<p><del>Strikethrough</del></p>\n<h2 id=\"blockquotes\">Blockquotes</h2>\n<blockquote>\n<p>Blockquotes can also be nested‚Ä¶</p>\n<p>‚Ä¶by using additional greater-than signs right next to each other‚Ä¶</p>\n<p>‚Ä¶or with spaces between arrows.</p>\n</blockquote>\n<h2 id=\"lists\">Lists</h2>\n<p>Unordered</p>\n<ul>\n<li>Create a list by starting a line with <code dir=\"auto\">+</code>, <code dir=\"auto\">-</code>, or <code dir=\"auto\">*</code></li>\n<li>Sub-lists are made by indenting 2 spaces:\n<ul>\n<li>Marker character change forces new list start:\n<ul>\n<li>Ac tristique libero volutpat at</li>\n<li>Facilisis in pretium nisl aliquet</li>\n<li>Nulla volutpat aliquam velit</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Very easy!</li>\n</ul>\n<p>Ordered</p>\n<ol>\n<li>\n<p>Lorem ipsum dolor sit amet</p>\n</li>\n<li>\n<p>Consectetur adipiscing elit</p>\n</li>\n<li>\n<p>Integer molestie lorem at massa</p>\n</li>\n<li>\n<p>You can use sequential numbers‚Ä¶</p>\n</li>\n<li>\n<p>‚Ä¶or keep all the numbers as <code dir=\"auto\">1.</code></p>\n</li>\n</ol>\n<p>Start numbering with offset:</p>\n<ol start=\"57\">\n<li>foo</li>\n<li>bar</li>\n</ol>\n<h2 id=\"code\">Code</h2>\n<p>Inline <code dir=\"auto\">code</code></p>\n<p>Indented code</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.j8ofn.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">// Some comments</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">line 1 of code</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">line 2 of code</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">line 3 of code</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"// Some commentsline 1 of codeline 2 of codeline 3 of code\"><div></div></button></div></figure></div>\n<p>Block code ‚Äúfences‚Äù</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">Sample text here...</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"Sample text here...\"><div></div></button></div></figure></div>\n<p>Syntax highlighting</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"js\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8D46B4\">var </span><span style=\"--0:#82AAFF;--1:#3C63B3\">foo</span><span style=\"--0:#C792EA;--1:#8D46B4\"> = function </span><span style=\"--0:#D9F5DD;--1:#111111\">(</span><span style=\"--0:#D7DBE0;--1:#403F53\">bar</span><span style=\"--0:#D9F5DD;--1:#111111\">)</span><span style=\"--0:#C792EA;--1:#8D46B4\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#C792EA;--1:#8D46B4\">  </span></span><span style=\"--0:#C792EA;--1:#8D46B4\">return </span><span style=\"--0:#D7DBE0;--1:#403F53\">bar</span><span style=\"--0:#C792EA;--1:#8D46B4\">++;</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#C792EA;--1:#8D46B4\">}</span><span style=\"--0:#D6DEEB;--1:#403F53\">;</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#7FDBCA;--1:#097174\">console</span><span style=\"--0:#C792EA;--1:#8D46B4\">.</span><span style=\"--0:#82AAFF;--1:#3C63B3\">log</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#82AAFF;--1:#3C63B3\">foo</span><span style=\"--0:#D6DEEB;--1:#403F53\">(</span><span style=\"--0:#F78C6C;--1:#AA0982\">5</span><span style=\"--0:#D6DEEB;--1:#403F53\">));</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"var foo = function (bar) {  return bar++;};console.log(foo(5));\"><div></div></button></div></figure></div>\n<h2 id=\"tables\">Tables</h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply the data that will be passed into templates.</td></tr><tr><td>engine</td><td>engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td>ext</td><td>extension to be used for dest files.</td></tr></tbody></table>\n<p>Right aligned columns</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th align=\"right\">Option</th><th align=\"right\">Description</th></tr></thead><tbody><tr><td align=\"right\">data</td><td align=\"right\">path to data files to supply the data that will be passed into templates.</td></tr><tr><td align=\"right\">engine</td><td align=\"right\">engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td align=\"right\">ext</td><td align=\"right\">extension to be used for dest files.</td></tr></tbody></table>\n<h2 id=\"links\">Links</h2>\n<p><a href=\"http://dev.nodeca.com\">link text</a></p>\n<p><a href=\"http://nodeca.github.io/pica/demo/\" title=\"title text!\">link with title</a></p>\n<p>Autoconverted link <a href=\"https://github.com/nodeca/pica\">https://github.com/nodeca/pica</a> (enable linkify to see)</p>\n<h2 id=\"images\">Images</h2>\n<p><img src=\"https://octodex.github.com/images/minion.png\" alt=\"Minion\">\n<img src=\"https://octodex.github.com/images/stormtroopocat.jpg\" alt=\"Stormtroopocat\" title=\"The Stormtroopocat\"></p>\n<p>Like links, Images also have a footnote style syntax</p>\n<p><img src=\"https://octodex.github.com/images/dojocat.jpg\" alt=\"Alt text\" title=\"The Dojocat\"></p>\n<p>With a reference later in the document defining the URL location:</p>\n<h2 id=\"emojies\">Emojies</h2>\n<p>Unicode emojies are supported everywhere nowadays, use them:\n<a href=\"https://unicode.org/emoji/charts/full-emoji-list.html\">Unicode emoji list</a></p>\n<p>Copy-paste from the <strong>browser</strong> column. Result:</p>\n<p>üòÄ</p>\n<!-- `U+1F609`\tbecomes: `&#1F609;` becomes: &#1F609;  -->\n<h2 id=\"unicode-characters\">Unicode characters</h2>\n<p>‚ñ∫ Àø ‡•†</p>\n<p>All different ways of writing should work. For example, for Euro:</p>\n<p><code dir=\"auto\">&#x26;#8364; &#x26;#x20AC; &#x26;euro;</code> =</p>\n<p>‚Ç¨ ‚Ç¨ ‚Ç¨</p>\n<h3 id=\"subscript--superscript\"><a href=\"https://github.com/markdown-it/markdown-it-sub\">Subscript</a> / <a href=\"https://github.com/markdown-it/markdown-it-sup\">Superscript</a></h3>\n<ul>\n<li>19^th^</li>\n<li>H<del>2</del>O</li>\n</ul>\n<h3 id=\"ins\"><a href=\"https://github.com/markdown-it/markdown-it-ins\">&#x3C;ins></a></h3>\n<p>++Inserted text++</p>\n<h3 id=\"mark\"><a href=\"https://github.com/markdown-it/markdown-it-mark\">&#x3C;mark></a></h3>\n<p>==Marked text==</p>\n<h3 id=\"footnotes\"><a href=\"https://github.com/markdown-it/markdown-it-footnote\">Footnotes</a></h3>\n<p>Footnote 1 link<sup><a href=\"#user-content-fn-first\" id=\"user-content-fnref-first\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1</a></sup>.</p>\n<p>Footnote 2 link<sup><a href=\"#user-content-fn-second\" id=\"user-content-fnref-second\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2</a></sup>.</p>\n<p>Inline footnote^[Text of inline footnote] definition.</p>\n<p>Duplicated footnote reference<sup><a href=\"#user-content-fn-second\" id=\"user-content-fnref-second-2\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2</a></sup>.</p>\n<h3 id=\"definition-lists\"><a href=\"https://github.com/markdown-it/markdown-it-deflist\">Definition lists</a></h3>\n<p>Term 1</p>\n<p>: Definition 1 with lazy continuation.</p>\n<p>Term 2 with <em>inline markup</em></p>\n<p>: Definition 2</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"plaintext\"><code><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#d6deeb;--1:#403f53\">    </span></span><span style=\"--0:#d6deeb;--1:#403f53\">{ some code, part of Definition 2 }</span></div></div><div class=\"ec-line\"><div class=\"code\">\n</div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#d6deeb;--1:#403f53\">Third paragraph of definition 2.</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"    { some code, part of Definition 2 }Third paragraph of definition 2.\"><div></div></button></div></figure></div>\n<p><em>Compact style:</em></p>\n<p>Term 1 ~ Definition 1</p>\n<p>Term 2 ~ Definition 2a ~ Definition 2b</p>\n<h3 id=\"abbreviations\"><a href=\"https://github.com/markdown-it/markdown-it-abbr\">Abbreviations</a></h3>\n<p>This is HTML abbreviation example.</p>\n<p>It converts ‚ÄúHTML‚Äù, but keep intact partial entries like ‚ÄúxxxHTMLyyy‚Äù and so on.</p>\n<p>*[HTML]: Hyper Text Markup Language</p>\n<h3 id=\"custom-containers\"><a href=\"https://github.com/markdown-it/markdown-it-container\">Custom containers</a></h3>\n<p>::: warning <em>here be dragons</em> :::</p>\n<section data-footnotes=\"\" class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-first\">\n<p>Footnote <strong>can have markup</strong></p>\n<p>and multiple paragraphs. <a href=\"#user-content-fnref-first\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">‚Ü©</a></p>\n</li>\n<li id=\"user-content-fn-second\">\n<p>Footnote text. <a href=\"#user-content-fnref-second\" data-footnote-backref=\"\" aria-label=\"Back to reference 2\" class=\"data-footnote-backref\">‚Ü©</a> <a href=\"#user-content-fnref-second-2\" data-footnote-backref=\"\" aria-label=\"Back to reference 2-2\" class=\"data-footnote-backref\">‚Ü©<sup>2</sup></a></p>\n</li>\n</ol>\n</section>";

				const frontmatter = {"title":"Styleguide","author":"Joost van der Laan","date":"2020-08-04T13:23:01.000Z"};
				const file = "/Users/joost/git/developer.fashionunited.com/src/content/docs/docs/style-guide/index.md";
				const url = undefined;
				function rawContent() {
					return "\n## Styleguide\n\nExamples of styling content **without** code samples in between.\n\n### Typography\n\nExamples of typography\n\n# h1 Heading\n\nThe Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n## h2 Heading\n\nThe Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n### h3 Heading\n\nThe Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n#### h4 Heading\n\nThe Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n##### h5 Heading\n\nThe Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n###### h6 Heading\n\nThe Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n<span class=\"subtitle1\">Subtitle1</span>\n\n<span class=\"subtitle2\">Subtitle2</span>\n\nBody1 The Fashionunited platform connects your website or application with the\nworldwide fashion conversation happening on Fashionunited.\n\n<p class=\"body2\">Body2 The Fashionunited platform connects your website or application with the worldwide fashion conversation happening on Fashionunited.</p>\n\n<span class=\"overline\">Overline</span>\n\n<span class=\"btn\">Button</span>\n\n<span class=\"caption\">Caption</span>\n\n## Horizontal Rules\n\n---\n\n---\n\n---\n\n## For typography pro's: Smart quotes, mdash & ndash\n\nmdash: &mdash; ndash: &ndash; regular hyphen: -\n\n<!--\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes' -->\n\n## Emphasis\n\n**This is bold text**\n\n**This is bold text**\n\n_This is italic text_\n\n_This is italic text_\n\n~~Strikethrough~~\n\n## Blockquotes\n\n> Blockquotes can also be nested...\n>\n> ...by using additional greater-than signs right next to each other...\n>\n> ...or with spaces between arrows.\n\n## Lists\n\nUnordered\n\n- Create a list by starting a line with `+`, `-`, or `*`\n- Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    - Ac tristique libero volutpat at\n    - Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n- Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n4. You can use sequential numbers...\n5. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n58. bar\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n```js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n## Tables\n\n| Option | Description                                                               |\n| ------ | ------------------------------------------------------------------------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default.    |\n| ext    | extension to be used for dest files.                                      |\n\nRight aligned columns\n\n| Option |                                                               Description |\n| -----: | ------------------------------------------------------------------------: |\n|   data | path to data files to supply the data that will be passed into templates. |\n| engine |    engine to be used for processing templates. Handlebars is the default. |\n|    ext |                                      extension to be used for dest files. |\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link <https://github.com/nodeca/pica> (enable linkify to see)\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\"\n\n## Emojies\n\nUnicode emojies are supported everywhere nowadays, use them:\n[Unicode emoji list](https://unicode.org/emoji/charts/full-emoji-list.html)\n\nCopy-paste from the **browser** column. Result:\n\nüòÄ\n\n<!-- `U+1F609`\tbecomes: `&#1F609;` becomes: &#1F609;  -->\n\n## Unicode characters\n\n&#9658; &#767; &#2400;\n\nAll different ways of writing should work. For example, for Euro:\n\n`&#8364; &#x20AC; &euro;` =\n\n&#8364; &#x20AC; &euro;\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n### [\\<ins>](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n### [\\<mark>](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n: Definition 1 with lazy continuation.\n\nTerm 2 with _inline markup_\n\n: Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1 ~ Definition 1\n\nTerm 2 ~ Definition 2a ~ Definition 2b\n\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language\n\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\n\n::: warning _here be dragons_ :::\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"styleguide","text":"Styleguide"},{"depth":3,"slug":"typography","text":"Typography"},{"depth":1,"slug":"h1-heading","text":"h1 Heading"},{"depth":2,"slug":"h2-heading","text":"h2 Heading"},{"depth":3,"slug":"h3-heading","text":"h3 Heading"},{"depth":4,"slug":"h4-heading","text":"h4 Heading"},{"depth":5,"slug":"h5-heading","text":"h5 Heading"},{"depth":6,"slug":"h6-heading","text":"h6 Heading"},{"depth":2,"slug":"horizontal-rules","text":"Horizontal Rules"},{"depth":2,"slug":"for-typography-pros-smart-quotes-mdash--ndash","text":"For typography pro‚Äôs: Smart quotes, mdash & ndash"},{"depth":2,"slug":"emphasis","text":"Emphasis"},{"depth":2,"slug":"blockquotes","text":"Blockquotes"},{"depth":2,"slug":"lists","text":"Lists"},{"depth":2,"slug":"code","text":"Code"},{"depth":2,"slug":"tables","text":"Tables"},{"depth":2,"slug":"links","text":"Links"},{"depth":2,"slug":"images","text":"Images"},{"depth":2,"slug":"emojies","text":"Emojies"},{"depth":2,"slug":"unicode-characters","text":"Unicode characters"},{"depth":3,"slug":"subscript--superscript","text":"Subscript / Superscript"},{"depth":3,"slug":"ins","text":"<ins>"},{"depth":3,"slug":"mark","text":"<mark>"},{"depth":3,"slug":"footnotes","text":"Footnotes"},{"depth":3,"slug":"definition-lists","text":"Definition lists"},{"depth":3,"slug":"abbreviations","text":"Abbreviations"},{"depth":3,"slug":"custom-containers","text":"Custom containers"},{"depth":2,"slug":"footnote-label","text":"Footnotes"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
