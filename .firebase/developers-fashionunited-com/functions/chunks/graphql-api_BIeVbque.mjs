import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_B8K-b4g3.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<h2 id=\"about-graphql\">About GraphQL</h2>\n<p>The <a href=\"https://graphql.github.io/\">GraphQL</a> data query language is:</p>\n<ul>\n<li>\n<p><strong><a href=\"https://graphql.github.io/graphql-spec/June2018/\">A specification.</a></strong> The\nspec determines the validity of the schema on the API server. The schema\ndetermines the validity of client calls.</p>\n</li>\n<li>\n<p><strong>Strongly typed.</strong> The schema defines an API’s type system and all object\nrelationships.</p>\n</li>\n<li>\n<p><strong>Introspective.</strong> A client can query the schema for details about the schema.</p>\n</li>\n<li>\n<p><strong>Hierarchical.</strong> The shape of a GraphQL call mirrors the shape of the JSON\ndata it returns. Nested fields let you query for and receive only the data you\nspecify in a <strong>single round trip.</strong></p>\n</li>\n<li>\n<p><strong>An application layer.</strong> GraphQL is not a storage model or a database query\nlanguage. The graph refers to graph structures defined in the schema, where\nnodes define objects and edges define relationships between objects. The API\ntraverses and returns application data based on the schema definitions,\nindependent of how the data is stored.</p>\n</li>\n</ul>\n<h2 id=\"endpoint\">Endpoint</h2>\n<p><a href=\"https://fashionunited.com/graphql/\">https://fashionunited.com/graphql/</a></p>\n<h2 id=\"the-graphiql-playground\">The GraphiQL Playground</h2>\n<p><a href=\"https://fashionunited.com/graphiql/\">https://fashionunited.com/graphiql/</a></p>\n<h2 id=\"my-first-query\">My first query</h2>\n<p>GraphQL is self-documenting, therefore you should be able to figure out possible\nqueries by having a look at the documentation found in the playground. The\n<span class=\"bg-green\">green tab</span> on the right opens up the schema.</p>\n<p>To help you getting started, here’s some example queries for the Marketplace.</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.j8ofn.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"graphql\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C5E478;--1:#3C63B3\">productsConnection</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">(</span><span style=\"--0:#D7DBE0\">locales</span><span style=\"--0:#D6DEEB\">: [</span></span><span style=\"--0:#809191;--1:#616671\">\"en-US\"</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">], </span><span style=\"--0:#D7DBE0\">brandIds</span><span style=\"--0:#D6DEEB\">: [</span></span><span style=\"--0:#F78C6C;--1:#AA0982\">1827</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">], </span><span style=\"--0:#D7DBE0\">first</span><span style=\"--0:#D6DEEB\">: </span></span><span style=\"--0:#F78C6C;--1:#AA0982\">20</span><span style=\"--0:#D6DEEB;--1:#403F53\"> ){</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">edges</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C5E478;--1:#3C63B3\">node</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">id</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">name</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">description</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">sizes</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">season</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">brand</span><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">          </span><span style=\"--0:#C5E478;--1:#3C63B3\">name</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">        </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">        </span><span style=\"--0:#C5E478;--1:#3C63B3\">imageUrl</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">      </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  productsConnection(locales: [&#x22;en-US&#x22;], brandIds: [1827], first: 20 ){    edges {      node {        id        name        description        sizes        season        brand{          name        }        imageUrl      }    }  }}\"><div></div></button></div></figure></div>\n<ul>\n<li>This is shabbies: <code dir=\"auto\">brandIds: [1827]</code></li>\n<li>Don’t request too much at once or you will get an error. We make use of\n<strong>Query Complexity</strong> to limit your calls.</li>\n<li>Without an <strong>API key</strong> you can only request public data.</li>\n</ul>\n<h3 id=\"pagination\">Pagination</h3>\n<p>Pagination works by specifying limit and offset:</p>\n<div class=\"expressive-code\"><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"graphql\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#C5E478;--1:#3C63B3\">products</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">(</span><span style=\"--0:#D7DBE0\">locales</span><span style=\"--0:#D6DEEB\">: [</span></span><span style=\"--0:#809191;--1:#616671\">\"en-US\"</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">], </span><span style=\"--0:#D7DBE0\">brandIds</span><span style=\"--0:#D6DEEB\">: [</span></span><span style=\"--0:#F78C6C;--1:#AA0982\">1827</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">], </span><span style=\"--0:#D7DBE0\">limit</span><span style=\"--0:#D6DEEB\">: </span></span><span style=\"--0:#F78C6C;--1:#AA0982\">20</span><span style=\"--1:#403F53\"><span style=\"--0:#D6DEEB\">, </span><span style=\"--0:#D7DBE0\">offset</span><span style=\"--0:#D6DEEB\">: </span></span><span style=\"--0:#F78C6C;--1:#AA0982\">10</span><span style=\"--0:#D6DEEB;--1:#403F53\">) {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">id</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">name</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">imageUrl</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">brand</span><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C5E478;--1:#3C63B3\">name</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">sizes</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#C5E478;--1:#3C63B3\">colors</span><span style=\"--0:#D6DEEB;--1:#403F53\"> {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#C5E478;--1:#3C63B3\">name</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  products(locales: [&#x22;en-US&#x22;], brandIds: [1827], limit: 20, offset: 10) {    id    name    imageUrl    brand{      name    }    sizes    colors {      name    }  }}\"><div></div></button></div></figure></div>\n<p>Have fun exploring and let us know what you plan to build!</p>";

				const frontmatter = {"title":"GraphQL API","comments":false,"toc":true,"images":["florian-krumm-yLDabpoCL3s-unsplash-5120x1051.jpg"],"menu":{"developers":{"parent":"Marketplace","weight":99}}};
				const file = "/Users/joost/git/developer.fashionunited.com/src/content/docs/docs/marketplace/graphql-api.md";
				const url = undefined;
				function rawContent() {
					return "\n## About GraphQL\n\nThe [GraphQL](https://graphql.github.io/) data query language is:\n\n- **[A specification.](https://graphql.github.io/graphql-spec/June2018/)** The\n  spec determines the validity of the schema on the API server. The schema\n  determines the validity of client calls.\n\n- **Strongly typed.** The schema defines an API's type system and all object\n  relationships.\n\n- **Introspective.** A client can query the schema for details about the schema.\n\n- **Hierarchical.** The shape of a GraphQL call mirrors the shape of the JSON\n  data it returns. Nested fields let you query for and receive only the data you\n  specify in a **single round trip.**\n\n- **An application layer.** GraphQL is not a storage model or a database query\n  language. The graph refers to graph structures defined in the schema, where\n  nodes define objects and edges define relationships between objects. The API\n  traverses and returns application data based on the schema definitions,\n  independent of how the data is stored.\n\n## Endpoint\n\n[https://fashionunited.com/graphql/](https://fashionunited.com/graphql/)\n\n## The GraphiQL Playground\n\n[https://fashionunited.com/graphiql/](https://fashionunited.com/graphiql/)\n\n## My first query\n\nGraphQL is self-documenting, therefore you should be able to figure out possible\nqueries by having a look at the documentation found in the playground. The\n<span class=\"bg-green\">green tab</span> on the right opens up the schema.\n\nTo help you getting started, here's some example queries for the Marketplace.\n\n```graphql\n{\n  productsConnection(locales: [\"en-US\"], brandIds: [1827], first: 20 ){\n    edges {\n      node {\n        id\n        name\n        description\n        sizes\n        season\n        brand{\n          name\n        }\n        imageUrl       \n      }\n    }\n  }\n}\n```\n\n- This is shabbies: `brandIds: [1827]`\n- Don't request too much at once or you will get an error. We make use of\n  **Query Complexity** to limit your calls.\n- Without an **API key** you can only request public data.\n\n### Pagination\n\nPagination works by specifying limit and offset:\n\n```graphql\n{\n  products(locales: [\"en-US\"], brandIds: [1827], limit: 20, offset: 10) {\n    id\n    name\n    imageUrl\n    brand{\n      name\n    }\n    sizes\n    colors {\n      name\n    }\n  }\n}\n```\n\nHave fun exploring and let us know what you plan to build!\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"about-graphql","text":"About GraphQL"},{"depth":2,"slug":"endpoint","text":"Endpoint"},{"depth":2,"slug":"the-graphiql-playground","text":"The GraphiQL Playground"},{"depth":2,"slug":"my-first-query","text":"My first query"},{"depth":3,"slug":"pagination","text":"Pagination"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
