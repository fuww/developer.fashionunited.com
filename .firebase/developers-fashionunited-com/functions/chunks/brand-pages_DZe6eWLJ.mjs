import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_B8K-b4g3.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<p>To help you get your brand page up &#x26; running as quickly and smoothly as\npossible, we need the following from you:</p>\n<ul>\n<li>header image</li>\n<li>logo</li>\n<li>contact email address</li>\n<li>‘about the brand’ text</li>\n</ul>\n<p>Optional:</p>\n<ul>\n<li>1x impression image</li>\n<li>1x video (YouTube or Vimeo embed code)</li>\n<li>4x collection impression image (from photo shoot)</li>\n</ul>\n<p>Please send everything to <strong><a href=\"mailto:marketplace@fashionunited.com\">marketplace@fashionunited.com</a></strong>.</p>\n<h3 id=\"header-image-requirements\">Header Image Requirements</h3>\n<p>The header image is scaled automatically, depending on the device the page is\nloaded on. To make sure the image quality meets our standard, there are minimum\nrequirements:</p>\n<p><strong>For desktop:</strong></p>\n<ul>\n<li>dimensions: 2560 x 526 px <strong>Bigger image size = better</strong>: nice to have (if\nsource image quality allows it) Example: 5120 x 1052 pixels or 3840 x 789\npixels. As long as the dimensions are the same.</li>\n<li>resolution: 72 dpi</li>\n</ul>\n<p><strong>For mobile:</strong> (this is not mandatory, but for a better experience on mobile\nyou can use these image settings)</p>\n<ul>\n<li>dimensions: 1200 x 960 px <strong>Bigger image size = better</strong>: nice to have (if\nsource image quality allows it)</li>\n<li>resolution: 72 dpi</li>\n</ul>\n<p>There is no need to crop the images beforehand. <strong>We can do that for you.</strong> Just\nmake sure the image size is big enough to fit the header dimensions, preferably\nthose mentioned below.</p>\n<h3 id=\"campaign-images\">Campaign images</h3>\n<p>Please provide up to 4 campaign images at a minimum of 72dpi and 280 x 350\npixels. <strong>Bigger image size = better</strong>: nice to have (if source image quality\nallows it) Example: 560 x 700 pixels or 840 x 1050 pixels. As long as the\ndimensions are the same.</p>\n<h3 id=\"logo-requirements\">Logo Requirements</h3>\n<p>Please provide a logo in a vector oriented format such as .svg, .eps or .ai.</p>\n<p>Preferably send us an .svg file. But we can also create one from the other\nmentioned formats. For more information see our\n<a href=\"https://developer.fashionunited.com/docs/logo/\">Logo Requirements</a>.</p>\n<h3 id=\"example\">Example</h3>\n<p>See an example here.</p>\n<p>{{&#x3C; amp-image src=“example-fish-fred.jpg” width=“893” height=“2879”\nlayout=“responsive” >}}</p>\n<p>Please also have a look at some\n<a href=\"https://fashionunited.com/company/recruitment-solutions/employer-branding/\">Employer Branding Page examples</a>.\nThe Marketplace Brand Pages will have a similar look and feel.</p>";

				const frontmatter = {"title":"Brand Pages","images":["alexandru-tugui--inuQpBGbgI-unsplash-2560x526.jpg"],"background_position":"50% 10%","menu":{"developers":{"parent":"Marketplace","weight":20}},"toc":true};
				const file = "/Users/joost/git/developer.fashionunited.com/src/content/docs/docs/marketplace/brand-pages.md";
				const url = undefined;
				function rawContent() {
					return "\nTo help you get your brand page up & running as quickly and smoothly as\npossible, we need the following from you:\n\n- header image\n- logo\n- contact email address\n- 'about the brand' text\n\nOptional:\n\n- 1x impression image\n- 1x video (YouTube or Vimeo embed code)\n- 4x collection impression image (from photo shoot)\n\nPlease send everything to **marketplace@fashionunited.com**.\n\n### Header Image Requirements\n\nThe header image is scaled automatically, depending on the device the page is\nloaded on. To make sure the image quality meets our standard, there are minimum\nrequirements:\n\n**For desktop:**\n\n- dimensions: 2560 x 526 px **Bigger image size = better**: nice to have (if\n  source image quality allows it) Example: 5120 x 1052 pixels or 3840 x 789\n  pixels. As long as the dimensions are the same.\n- resolution: 72 dpi\n\n**For mobile:** (this is not mandatory, but for a better experience on mobile\nyou can use these image settings)\n\n- dimensions: 1200 x 960 px **Bigger image size = better**: nice to have (if\n  source image quality allows it)\n- resolution: 72 dpi\n\nThere is no need to crop the images beforehand. **We can do that for you.** Just\nmake sure the image size is big enough to fit the header dimensions, preferably\nthose mentioned below.\n\n### Campaign images\n\nPlease provide up to 4 campaign images at a minimum of 72dpi and 280 x 350\npixels. **Bigger image size = better**: nice to have (if source image quality\nallows it) Example: 560 x 700 pixels or 840 x 1050 pixels. As long as the\ndimensions are the same.\n\n### Logo Requirements\n\nPlease provide a logo in a vector oriented format such as .svg, .eps or .ai.\n\nPreferably send us an .svg file. But we can also create one from the other\nmentioned formats. For more information see our\n[Logo Requirements](https://developer.fashionunited.com/docs/logo/).\n\n### Example\n\nSee an example here.\n\n{{< amp-image src=\"example-fish-fred.jpg\" width=\"893\" height=\"2879\"\nlayout=\"responsive\" >}}\n\nPlease also have a look at some\n[Employer Branding Page examples](https://fashionunited.com/company/recruitment-solutions/employer-branding/).\nThe Marketplace Brand Pages will have a similar look and feel.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":3,"slug":"header-image-requirements","text":"Header Image Requirements"},{"depth":3,"slug":"campaign-images","text":"Campaign images"},{"depth":3,"slug":"logo-requirements","text":"Logo Requirements"},{"depth":3,"slug":"example","text":"Example"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
