---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "@/layouts/Layout.astro";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
    Card,
    CardContent,
    CardDescription,
    CardHeader,
    CardTitle,
} from "@/components/ui/card";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
    const sessionCookie = Astro.cookies.get("__session")?.value;
    if (sessionCookie) {
        const decodedCookie = await auth.verifySessionCookie(sessionCookie);
        if (decodedCookie) {
            return Astro.redirect("/dashboard");
        }
    }
}

export const prerender = false;
---

<div class="fixed inset-0 bg-gray-100">
<Layout title="Sign in">
        <Card className="mx-auto max-w-sm">
            <CardHeader>
                <CardTitle
                    className="scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl text-center"
                    >Sign in</CardTitle
                >
                <CardDescription className="text-center"
                    >Enter your credentials to access your account</CardDescription
                >
            </CardHeader>
            <CardContent>
                <form action="/api/auth/signin" method="post" class="space-y-4">
                    <div class="grid gap-4">
                        <div class="grid gap-2">
                            <Label htmlFor="email">Email</Label>
                            <Input
                                className="w-full"
                                type="email"
                                name="email"
                                id="email"
                            />
                        </div>
                        <div class="grid gap-2">
                            <div class="flex items-center">
                                <Label htmlFor="password">Password</Label>
                                <a
                                    href="/forgot-password"
                                    class="ml-auto inline-block text-sm underline"
                                >
                                    Forgot your password?
                                </a>
                            </div>
                            <Input
                                type="password"
                                name="password"
                                id="password"
                                required
                            />
                        </div>
                        <Button type="submit" className="w-full">Login</Button>
                    </div>
                    <Button
                        variant="outline"
                        id="google"
                        className="w-full flex items-center justify-center space-x-2 bg-blue-500 text-white hover:bg-blue-600"
                        ><svg
                            class="w-4 h-4 mr-2"
                            viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                fill="currentColor"
                                d="M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z"
                            ></path>
                        </svg> Sign in with Google</Button
                    >
                </form>
                <div class="mt-4 text-center text-sm">
                    Don&apos;t have an account?{" "}
                    <a href="/register" class="underline"> Sign up </a>
                </div>
            </CardContent>
        </Card>
        <script>
            import {
                getAuth,
                inMemoryPersistence,
                signInWithEmailAndPassword,
                GoogleAuthProvider,
                signInWithPopup,
            } from "firebase/auth";
            import { app } from "../firebase/client";

            const auth = getAuth(app);
            // This will prevent the browser from storing session data
            auth.setPersistence(inMemoryPersistence);

            const form = document.querySelector("form") as HTMLFormElement;
            form.addEventListener("submit", async (e) => {
                e.preventDefault();
                const formData = new FormData(form);
                const email = formData.get("email")?.toString();
                const password = formData.get("password")?.toString();

                if (!email || !password) {
                    return;
                }
                const userCredential = await signInWithEmailAndPassword(
                    auth,
                    email,
                    password,
                );
                const idToken = await userCredential.user.getIdToken();
                const response = await fetch("/api/auth/signin", {
                    method: "GET",
                    headers: {
                        Authorization: `Bearer ${idToken}`,
                    },
                });

                if (response.redirected) {
                    window.location.assign(response.url);
                }
            });

            const googleSignin = document.querySelector(
                "#google",
            ) as HTMLButtonElement;
            googleSignin.addEventListener("click", async () => {
                const provider = new GoogleAuthProvider();
                const userCredential = await signInWithPopup(auth, provider);
                const idToken = await userCredential.user.getIdToken();
                const res = await fetch("/api/auth/signin", {
                    headers: {
                        Authorization: `Bearer ${idToken}`,
                    },
                });

                if (res.redirected) {
                    window.location.assign(res.url);
                }
            });
        </script>
</Layout>
</div>
